{
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "4c2f2cf11e68087cd5b5807cc54e7b9dd4c24c5bc4ce94c2171cc7d3bb92f8b1"
  },
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "seconds"
            }
          ]
        }
      },
      "id": "73b97f64-5adc-473c-bb3c-470110d6e316",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -3260,
        1120
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=http://tpe.localhost/api/checkcalendar",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json }}",
        "options": {}
      },
      "id": "d331c342-2d3a-4fc8-b825-b0a3afc1f3ae",
      "name": "RetriveRemoteEvent",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2380,
        1140
      ]
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"remote\": {{ $json }}\n}\n ",
        "options": {}
      },
      "id": "c5e2eb32-2944-43de-891e-cee354500f87",
      "name": "WrapRemote",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -1460,
        1080
      ]
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"local\": {{ $json }}\n}\n ",
        "options": {}
      },
      "id": "a8cef910-d91c-411b-b3bf-340bf38d85f5",
      "name": "WrapLocal",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -1320,
        1220
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "d1e6c513-63db-47ef-a346-68e4e0e4c16f",
      "name": "CombineEvent",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        -1120,
        1180
      ]
    },
    {
      "parameters": {
        "url": "=http://tpe.localhost/api/getevent/{{ $json.UID }}",
        "options": {}
      },
      "id": "a093eda9-21fd-435c-87bc-fbb7631cd933",
      "name": "RetriveLocal",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1480,
        1220
      ]
    },
    {
      "parameters": {
        "content": "## Calendriers\n\nrécupérer tous les calendrier de la base de données\n\n",
        "height": 381.114824797845,
        "width": 578.2136927223729
      },
      "id": "5fe5eac7-314f-4ad5-a6d0-29d79699da69",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3100,
        960
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "10b800ff-698a-442a-954c-fa4f21b11d8e",
              "leftValue": "={{ $json.local.id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "efb1e5f8-02ba-46ab-b829-0cbb7e939b86",
      "name": "EventExist",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -860,
        1220
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "135ee19d-8b33-487e-ae85-59d7936a5276",
              "leftValue": "={{ $json.remote[\"LAST-MODIFIED\"] }}",
              "rightValue": "={{ $json.local.lastModified }}",
              "operator": {
                "type": "number",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "46c86aea-5aad-4087-b302-48dbee8c9fab",
      "name": "EventChanged",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -200,
        740
      ]
    },
    {
      "parameters": {
        "method": "PUT",
        "url": "=http://tpe.localhost/api/updateEvent/{{ $json.local.id }}",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"startDateTime\": \"{{ $json.remote.DTSTART }}\",\n  \"endDateTime\": \"{{ $json.remote.DTEND }}\",\n  \"title\": \"{{ $json.remote.SUMMARY }}\",\n  \"location\": \"{{ $json.remote.LOCATION }}\",\n  \"description\": \"{{ $json.remote.DESCRIPTION }}\",\n  \"created\": \"{{ $json.remote.CREATED }}\",\n  \"lastModified\": \"{{ $json.remote['LAST-MODIFIED'] }}\",\n  \"status\": \"{{ $json.remote.STATUS }}\"\n}\n",
        "options": {}
      },
      "id": "622ee57b-8535-4aee-a7fe-3f60fcb6966f",
      "name": "updateLocal",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1260,
        440
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://tpe.localhost/api/setevent/nothing",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"uid\": \"{{ $json.remote.UID }}\",\n  \"startDateTime\": \"{{ $json.remote.DTSTART }}\",\n  \"endDateTime\": \"{{ $json.remote.DTEND }}\",\n  \"title\": \"{{ $json.remote.SUMMARY }}\",\n  \"location\": \"{{ $json.remote.LOCATION }}\",\n  \"description\": \"{{ $json.remote.DESCRIPTION }}\",\n  \"created\": \"{{ $json.remote.CREATED }}\",\n  \"lastModified\": \"{{ $json.remote['LAST-MODIFIED'] }}\",\n  \"calendarID\": \"{{ $json.remote.calendarID }}\",\n  \"status\": \"{{ $json.remote.STATUS }}\"\n}\n",
        "options": {}
      },
      "id": "407d02c0-3656-4abe-8761-85567b87132b",
      "name": "InsertEvent",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -560,
        1240
      ]
    },
    {
      "parameters": {
        "html": "<!DOCTYPE html\n        PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"fr\">\n\n<head>\n    <!--[if gte mso 9]>\n    <xml>\n        <o:OfficeDocumentSettings>\n            <o:AllowPNG/>\n            <o:PixelsPerInch>96</o:PixelsPerInch>\n        </o:OfficeDocumentSettings>\n    </xml>\n    <![endif]-->\n    <meta http-equiv=\"Content-type\" content=\"text/html; charset=utf-8\"/>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\"/>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"/>\n    <meta name=\"format-detection\" content=\"date=no\"/>\n    <meta name=\"format-detection\" content=\"address=no\"/>\n    <meta name=\"format-detection\" content=\"telephone=no\"/>\n    <meta name=\"x-apple-disable-message-reformatting\"/>\n    <!--[if !mso]><!-->\n    <link\n            href=\"https://fonts.googleapis.com/css?family=Kreon:400,700|Playfair+Display:400,400i,700,700i|Raleway:400,400i,700,700i|Roboto:400,400i,700,700i\"\n            rel=\"stylesheet\"/>\n    <!--<![endif]-->\n    <title>Email Template</title>\n    <!--[if gte mso 9]>\n    <style type=\"text/css\" media=\"all\">\n        sup {\n            font-size: 100% !important;\n        }\n    </style>\n    <![endif]-->\n</head>\n\n<body class=\"body\"\n      style=\"padding:0 !important; margin:0 !important; display:block !important; min-width:100% !important; width:100% !important; background:#1e52bd; -webkit-text-size-adjust:none;\">\n<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" bgcolor=\"#333333\" style=\"min-height: 100vh;\">\n {{$json.eList}}                                       \n</table>\n</body>\n\n</html>"
      },
      "id": "63cfca77-3951-4eb9-afcd-f68c80540d5c",
      "name": "MailTemplate",
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        1220,
        1280
      ]
    },
    {
      "parameters": {
        "html": "<tr>\n  <th> Modification de l'evenement </th>\n</tr>\n\n<tr>\n<td class=\"pb40\" style=\"padding-bottom:10px; background:red;\">\n<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n<tr>\n<td class=\"event-separator\" style=\"padding-bottom:10px; border-bottom:1px solid #ffffff;\">\n<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n<tr>\n<!-- Date de l'evenement -->\n<th width=\"60\" style=\"font-size:0pt; line-height:0pt; padding:0; margin:0; font-weight:normal; vertical-align:top;\">\n<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n<tr>\n<td class=\"date\" style=\"color:#000000; font-family:'Raleway', Arial,sans-serif; font-size:12px; line-height:16px; text-align:left; padding-bottom:6px;\">\n[month]\n</td>\n</tr>\n<tr>\n<td class=\"day\" style=\"color:#1e52bd; font-family:'Raleway', Arial,sans-serif; font-size:20px; line-height:25px; text-align:left; font-weight:bold;\">\n[day]\n</td>\n</tr>\n</table>\n</th>\n<!-- gap-->\n<th class=\"column-empty\" width=\"10\" style=\"font-size:0pt; line-height:0pt; padding:0; margin:0; font-weight:normal; direction:ltr;\">\n</th>\n\n<!-- Intitulé de l'evenement -->\n<th style=\"font-size:0pt; line-height:0pt; padding:0; margin:0; font-weight:normal; vertical-align:top;\">\n<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n<tr>\n<td class=\"h5-black black\" style=\"font-family:'Raleway', Arial,sans-serif; font-size:14px; line-height:18px; text-align:left; padding-bottom:10px; text-transform:uppercase; font-weight:bold; color:#000000;\">\n[title]\n</td>\n</tr>\n<tr>\n<td class=\"text black\"\nstyle=\"font-family:'Raleway', Arial,sans-serif; font-size:14px; line-height:18px; text-align:left; color:#000000;\">\n<span>[sHour][eHour]</span>&nbsp;&nbsp;&nbsp;\n<span style=\"font-weight:bold; margin-left:auto;\">[location]</span>\n</td>\n</tr>\n</table>\n</th>\n<!-- gap -->\n<th class=\"column-empty\"\nwidth=\"10\"\nstyle=\"font-size:0pt; line-height:0pt; padding:0; margin:0; font-weight:normal; direction:ltr;\">\n</th>\n</table>\n</td>\n</tr>\n</table>\n</td>\n  </tr>\n<tr>\n  <th>Nouvelle version :</th>\n</tr>\n<tr>\n  <td class=\"pb40\" style=\"padding-bottom:10px; background:green;\">\n<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n<tr>\n<td class=\"event-separator\" style=\"padding-bottom:10px; border-bottom:1px solid #ffffff;\">\n<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n<tr>\n<!-- Date de l'evenement -->\n<th width=\"60\" style=\"font-size:0pt; line-height:0pt; padding:0; margin:0; font-weight:normal; vertical-align:top;\">\n<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n<tr>\n<td class=\"date\" style=\"color:#000000; font-family:'Raleway', Arial,sans-serif; font-size:12px; line-height:16px; text-align:left; padding-bottom:6px;\">\n[2month]\n</td>\n</tr>\n<tr>\n<td class=\"day\" style=\"color:#1e52bd; font-family:'Raleway', Arial,sans-serif; font-size:20px; line-height:25px; text-align:left; font-weight:bold;\">\n[2day]\n</td>\n</tr>\n</table>\n</th>\n<!-- gap-->\n<th class=\"column-empty\" width=\"10\" style=\"font-size:0pt; line-height:0pt; padding:0; margin:0; font-weight:normal; direction:ltr;\">\n</th>\n\n<!-- Intitulé de l'evenement -->\n<th style=\"font-size:0pt; line-height:0pt; padding:0; margin:0; font-weight:normal; vertical-align:top;\">\n<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n<tr>\n<td class=\"h5-black black\" style=\"font-family:'Raleway', Arial,sans-serif; font-size:14px; line-height:18px; text-align:left; padding-bottom:10px; text-transform:uppercase; font-weight:bold; color:#000000;\">\n[2title]\n</td>\n</tr>\n<tr>\n<td class=\"text black\"\nstyle=\"font-family:'Raleway', Arial,sans-serif; font-size:14px; line-height:18px; text-align:left; color:#000000;\">\n<span>[2sHour][2eHour]</span>&nbsp;&nbsp;&nbsp;\n<span style=\"font-weight:bold; margin-left:auto;\">[2location]</span>\n</td>\n</tr>\n</table>\n</th>\n<!-- gap -->\n<th class=\"column-empty\"\nwidth=\"10\"\nstyle=\"font-size:0pt; line-height:0pt; padding:0; margin:0; font-weight:normal; direction:ltr;\">\n</th>\n</table>\n</td>\n</tr>\n</table>\n</td>\n</tr>"
      },
      "id": "64e9c556-16cf-4263-8655-ab72a17cd9a4",
      "name": "EventList",
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        580,
        1200
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "6ad151db-0a56-4bc9-a7cd-aaf05f418e2a",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        300,
        800
      ]
    },
    {
      "parameters": {},
      "id": "bf955404-e1c2-4ee0-9d4a-9e912c0d9d8d",
      "name": "No Operation, do nothing",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        860,
        720
      ]
    },
    {
      "parameters": {
        "mode": "chooseBranch"
      },
      "id": "87d48188-48d2-414c-bf0b-201915534bda",
      "name": "Merge2",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        940,
        440
      ]
    },
    {
      "parameters": {
        "content": "## Création\n\nA chaque fois qu'on détecte un événement qui figure pas dans notre base de données, on l'insert immédiatement a travers cette succession d’opération\n\n",
        "height": 413.8221024258774,
        "width": 620.733153638815,
        "color": 4
      },
      "id": "5200d5c7-7298-495e-96e9-50a1c5cb1442",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1160,
        1060
      ]
    },
    {
      "parameters": {
        "content": "## Association des événements\n\nmettre l’événement récupéré depuis le calendrier distant côte à côte avec son équivalent de celui défini dans la base de donnée s'il existe ",
        "height": 506.3698757179214,
        "width": 612.1502660433026,
        "color": 2
      },
      "id": "5dbcac91-9b22-47c0-8f7f-0982619fdff0",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1800,
        960
      ]
    },
    {
      "parameters": {
        "content": "## Événements\n\nrécupérer tous les événements de chaque calendriers trouver depuis la base de données\n",
        "height": 426.6260467868376,
        "width": 592.4430349158661
      },
      "id": "2b645b10-8453-44a3-8617-4a6975472a19",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2480,
        960
      ]
    },
    {
      "parameters": {
        "url": "=http://tpe.localhost/api/getSubscribers/{{ $json.local.calendarID }}",
        "options": {}
      },
      "id": "83089ced-d9fc-4103-adbe-c83801089677",
      "name": "getSubscribers",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        100,
        760
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "e1f332a4-992d-4c7a-8ce9-62d12bd0eaec",
      "name": "LoopOverSubscribers",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        480,
        800
      ]
    },
    {
      "parameters": {
        "fromEmail": "=contact@baldazi.com",
        "toEmail": "={{ $json.email }}",
        "subject": "Mise à jour importante : Modifications dans vos événements",
        "html": "={{ $json.html }}",
        "options": {
          "appendAttribution": false
        }
      },
      "id": "e0dd6a5a-5759-4227-b920-1ca4d25536a3",
      "name": "SendChange",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2.1,
      "position": [
        760,
        860
      ],
      "credentials": {
        "smtp": {
          "id": "CrEhML3ntPmT2wJj",
          "name": "SMTP account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "function splitDateTime(dateTime) {\n    // Vérifie si la chaîne contient un 'T' ou un espace qui sépare la date et l'heure\n    let separator = dateTime.includes('T') ? 'T' : (dateTime.includes(' ') ? ' ' : null);\n    \n    // Si un séparateur est trouvé, sépare en deux parties : date et heure\n    if (separator) {\n        return dateTime.split(separator);\n    } else {\n        // Si pas de séparateur trouvé, retourne seulement la date et une chaîne vide pour l'heure\n        return [dateTime, ''];\n    }\n}\n\nfunction formatDate(dateString) {\n  const formattedDate = `${dateString.slice(0, 4)}-${dateString.slice(4, 6)}-${dateString.slice(6, 8)}`;\n  return formattedDate;\n}\n\nfunction formatTime(timeString) {\n  const formattedTime = timeString.lenght>8?`${timeString.slice(0, 2)}:${timeString.slice(2, 4)}`:\"\";\n  return formattedTime;\n}\n\n\n\nlet lst = [];\nfor (const item of $input.all()) {\n  let [sd, st] = splitDateTime(item.json.remote.DTSTART);\n  let [ed, et] = splitDateTime(item.json.remote.DTEND);\n  item.json.remote.startDate = formatDate(sd);\n  item.json.remote.startTime = formatTime(st);\n  item.json.remote.endDate = formatDate(ed);\n  item.json.remote.endTime = formatTime(et);\n\n  [sd, st] = splitDateTime(item.json.local.startDateTime);\n  [ed, et] = splitDateTime(item.json.local.endDateTime);\n  item.json.local.startDate = formatDate(sd);\n  item.json.local.startTime = formatTime(st);\n  item.json.local.endDate = formatDate(ed);\n  item.json.local.endTime = formatTime(et);\n  \n  lst.push(item);\n}\n\nreturn lst;"
      },
      "id": "393d80da-60c8-48cd-8306-d10be0c419a8",
      "name": "SplitDateTime",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        340,
        1300
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "311ca84b-d853-41b5-a552-5003febf0ec9",
      "name": "MergeEventAndTemplate",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        800,
        1280
      ]
    },
    {
      "parameters": {
        "jsCode": "for (const item of $input.all()) {\n  let e = item.json.local;\n    eRow = item.json.html;\n    date = new Date(e.startDate);\n    if (e.startDate != e.endDate && e.startTime.length != 0) {\n      secondDate = new Date(e.endDate);\n      eRow = eRow.replace('[day]', date.getDate()+\"-\"+secondDate.getDate());\n    } else{\n      eRow = eRow.replace('[day]', date.getDate());\n    }\n    eRow = eRow.replace('[title]', e.title);\n    eRow = eRow.replace('[month]', date.toLocaleString('fr', { month: 'short' }));\n    eRow = eRow.replace('[sHour]', e.startTime.length==0?\"[Toute la journée]\":e.startTime.slice(0, 5)+\" - \");\n    eRow = eRow.replace('[eHour]', e.endTime.slice(0, 5));\n    eRow = eRow.replace('[location]', e.location);\n\n  e = item.json.remote;\n    \n    date = new Date(e.startDate);\n    if (e.startDate != e.endDate && e.startTime.length != 0) {\n      secondDate = new Date(e.endDate);\n      eRow = eRow.replace('[2day]', date.getDate()+\"-\"+secondDate.getDate());\n    } else{\n      eRow = eRow.replace('[2day]', date.getDate());\n    }\n    eRow = eRow.replace('[2title]', e.SUMMARY);\n    eRow = eRow.replace('[2month]', date.toLocaleString('fr', { month: 'short' }));\n    eRow = eRow.replace('[2sHour]', e.startTime.length==0?\"[Toute la journée]\":e.startTime.slice(0, 5)+\" - \");\n    eRow = eRow.replace('[2eHour]', e.endTime.slice(0, 5));\n    eRow = eRow.replace('[2location]', e.LOCATION);\n  \n   let eList = eRow;\n\n   lst = {uuid:Date.now(), summary:item.json.summary, email:item.json.email, userID:item.json.id,eList};\n}\n\nreturn lst;\n"
      },
      "id": "16ef0da8-0fa3-4194-8b2e-524885e03591",
      "name": "EventListTemplate",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1020,
        1280
      ]
    },
    {
      "parameters": {
        "content": "## Notifier les changements\nenvoyer un email pour informer les abonnées de la modification de l’événement.\n_nous avant pas spécifier ce qui a changé dans les caractéristiques de l'événement_.",
        "height": 420.0228571428577,
        "width": 779.6700808625337,
        "color": 6
      },
      "id": "192e597f-bc6c-4ca1-82ed-0cfb46e5b6a4",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        40,
        640
      ]
    },
    {
      "parameters": {
        "content": "## Générer le message",
        "height": 392.2216711590297,
        "width": 1195.052506738545,
        "color": 2
      },
      "id": "75218f5f-a07b-4004-8fe3-743bef212827",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        60,
        1100
      ]
    },
    {
      "parameters": {
        "content": "## Mise à jour\n__Mettre à jour l'événement dans la base de données__. _il est important d'effectuer cette opération après l'envoi du mail au abonnées_. ",
        "height": 263.02792452830187,
        "width": 621.0397843665772,
        "color": 5
      },
      "id": "cf941cdd-ba78-4152-ae10-379bc73e16ef",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        620,
        320
      ]
    },
    {
      "parameters": {
        "options": {
          "reset": false
        }
      },
      "id": "0629bfe4-82ea-4674-9585-59195f94dac7",
      "name": "LoopOverCalendars",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -2660,
        1120
      ]
    },
    {
      "parameters": {
        "options": {
          "reset": "={{ $node['LoopOverEvent'].context[\"done\"] }}"
        }
      },
      "id": "8aa02b59-98c6-4bec-92f6-73e7677ca74a",
      "name": "LoopOverEvent",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -1840,
        1120
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "7e990e1a-c6ee-43f8-a996-064d53688a56",
              "leftValue": "={{ $json.content }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "9e5078d3-6b57-4eb9-8b5c-66d278ac6a33",
      "name": "If1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -2200,
        1140
      ]
    },
    {
      "parameters": {
        "url": "http://tpe.localhost/api/calendars",
        "options": {}
      },
      "id": "7f108ebb-c1bf-438f-af73-0bcaa028e802",
      "name": "GetAllCalendar",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3100,
        1120
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "432fc995-e6b7-402c-8041-3de28b171d92",
              "leftValue": "={{ $json.subscribers }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "db250946-20af-4e6f-81af-1a0d719c4d34",
      "name": "hasSubscribers",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -2880,
        1120
      ]
    }
  ],
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "GetAllCalendar",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "RetriveRemoteEvent": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "WrapRemote": {
      "main": [
        [
          {
            "node": "CombineEvent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "WrapLocal": {
      "main": [
        [
          {
            "node": "CombineEvent",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "CombineEvent": {
      "main": [
        [
          {
            "node": "EventExist",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "RetriveLocal": {
      "main": [
        [
          {
            "node": "WrapLocal",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "EventExist": {
      "main": [
        [
          {
            "node": "EventChanged",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "InsertEvent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "EventChanged": {
      "main": [
        [
          {
            "node": "SplitDateTime",
            "type": "main",
            "index": 0
          },
          {
            "node": "getSubscribers",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "LoopOverEvent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "updateLocal": {
      "main": [
        [
          {
            "node": "LoopOverEvent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "InsertEvent": {
      "main": [
        [
          {
            "node": "LoopOverEvent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MailTemplate": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "EventList": {
      "main": [
        [
          {
            "node": "MergeEventAndTemplate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "LoopOverSubscribers",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge2": {
      "main": [
        [
          {
            "node": "updateLocal",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "getSubscribers": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "LoopOverSubscribers": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "SendChange",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SendChange": {
      "main": [
        [
          {
            "node": "LoopOverSubscribers",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SplitDateTime": {
      "main": [
        [
          {
            "node": "MergeEventAndTemplate",
            "type": "main",
            "index": 1
          },
          {
            "node": "EventList",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MergeEventAndTemplate": {
      "main": [
        [
          {
            "node": "EventListTemplate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "EventListTemplate": {
      "main": [
        [
          {
            "node": "MailTemplate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "LoopOverCalendars": {
      "main": [
        null,
        [
          {
            "node": "RetriveRemoteEvent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "LoopOverEvent": {
      "main": [
        [
          {
            "node": "LoopOverCalendars",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "WrapRemote",
            "type": "main",
            "index": 0
          },
          {
            "node": "RetriveLocal",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "LoopOverEvent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "LoopOverCalendars",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GetAllCalendar": {
      "main": [
        [
          {
            "node": "hasSubscribers",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "hasSubscribers": {
      "main": [
        [
          {
            "node": "LoopOverCalendars",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {}
}